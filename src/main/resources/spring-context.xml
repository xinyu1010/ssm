<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
	    http://www.springframework.org/schema/tx/spring-tx.xsd"> 
            
	<!--开启注解自动生成bean  -->
	<context:component-scan base-package="com.redbean"/>
	<!--加载外界文件  -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" value="${jdbc.driver}"/>
	    <property name="url" value="${jdbc.url}"/>
	    <property name="username" value="${jdbc.user}"/>
	    <property name="password" value="${jdbc.password}"/>
	</bean>
	
	<!-- 读取mybatis文件 -->
	<!-- 配置SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <!--mybatis和数据库连接   注入数据源  -->
		<property name="dataSource" ref="dataSource" />
		
		<!--读取mybatis的总配置  -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 类型别名扫描包 -->
		<property name="typeAliasesPackage" value="com.redbean.model"></property>
		<!--配置文件和接口分离  -->
		<property name="mapperLocations" value="classpath:*/*.xml"></property>
	</bean>
	
	<!--mapper.xml  -->
	<!-- 配置接口-->
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.redbean.dao.UserDao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 数据源事务管理平台   可以管理不同的数据库  -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	      <!-- 注入相应的数据源 -->
	      <property name="dataSource" ref="dataSource"/>
	</bean>
 
	<!-- 开启事务注解标签 -->
	<tx:annotation-driven/>


 
</beans>  